---
apiVersion: v1
kind: Template
labels:
  app: "${APP_NAME}"
  app.kubernetes.io/component: updater
  app.kubernetes.io/instance: ${INSTANCE}
  app.kubernetes.io/name: backup
  app.kubernetes.io/managed-by: template
  app.kubernetes.io/part-of: ${APP_NAME}-${INSTANCE}
  app.kubernetes.io/version: "3.9"
  app.openshift.io/runtime: rsnapshot
  template: "${REPO_NAME}-template"
metadata:
  name: "${REPO_NAME}-template"
objects:
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: "${APP_NAME}-hourly-${TARGET}"
    spec:
      concurrencyPolicy: Replace
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1
      startingDeadlineSeconds: 60
      jobTemplate:
        metadata:
          labels:
            app: "${APP_NAME}-hourly-${TARGET}"
            template: "${REPO_NAME}-template"
        spec:
          activeDeadlineSeconds: 600
          backoffLimit: 0
          completions: 1
          parallelism: 1
          template:
            metadata:
              labels:
                app: "${APP_NAME}-hourly-${TARGET}"
                template: "${REPO_NAME}-template"
            spec:
              containers:
                - name: rsnapshot
                  image: "${IMAGE_REGISTRY}/${NAMESPACE}/${REPO_NAME}-app:latest"
                  imagePullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  env:
                  - name: UNIT
                    value: hourly
                  - name: src 
                    value: ${SRC}
                  - name: target
                    value: ${TARGET}
                  volumeMounts:
                  - name: ssh
                    mountPath: /app/.ssh/
                  - name: config-volume
                    mountPath: /usr/rsnapshot
                  - name: drive
                    mountPath: /home/randomstore/backup
              volumes:
              - name: ssh
                configMap:
                    name: ssh-key
              - name: config-volume
                configMap:
                    name: rsnapshot-conf
              - name: drive
                persistentVolumeClaim:
                    claimName: backup-drive

              restartPolicy: Never
              terminationGracePeriodSeconds: 30
      schedule: "${CRON_SCHEDULE} * * * *"
      suspend: "${{SUSPEND_CRON}}"
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: "${APP_NAME}-daily-${TARGET}"
    spec:
      concurrencyPolicy: Replace
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1
      startingDeadlineSeconds: 60
      jobTemplate:
        metadata:
          labels:
            app: "${APP_NAME}-daily-${TARGET}"
            template: "${REPO_NAME}-template"
        spec:
          activeDeadlineSeconds: 600
          backoffLimit: 0
          completions: 1
          parallelism: 1
          template:
            metadata:
              labels:
                app: "${APP_NAME}-daily-${TARGET}"
                template: "${REPO_NAME}-template"
            spec:
              containers:
                - name: rsnapshot
                  image: "${IMAGE_REGISTRY}/${NAMESPACE}/${REPO_NAME}-app:latest"
                  imagePullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  env:
                  - name: UNIT
                    value: daily
                  - name: src 
                    value: ${SRC}
                  - name: target
                    value: ${TARGET}
                  volumeMounts:
                  - name: ssh
                    mountPath: /app/.ssh/
                  - name: config-volume
                    mountPath: /usr/rsnapshot
                  - name: drive
                    mountPath: /home/randomstore/backup
              volumes:
              - name: ssh
                configMap:
                    name: ssh-key
              - name: config-volume
                configMap:
                    name: rsnapshot-conf
              - name: drive
                persistentVolumeClaim:
                    claimName: backup-drive

              restartPolicy: Never
              terminationGracePeriodSeconds: 30
      schedule: "${CRON_SCHEDULE} ${CRON_SCHEDULE} * * *"
      suspend: "${{SUSPEND_CRON}}"
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: "${APP_NAME}-monthly-${TARGET}"
    spec:
      concurrencyPolicy: Replace
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1
      startingDeadlineSeconds: 60
      jobTemplate:
        metadata:
          labels:
            app: "${APP_NAME}-monthly-${TARGET}"
            template: "${REPO_NAME}-template"
        spec:
          activeDeadlineSeconds: 600
          backoffLimit: 0
          completions: 1
          parallelism: 1
          template:
            metadata:
              labels:
                app: "${APP_NAME}-monthly-${TARGET}"
                template: "${REPO_NAME}-template"
            spec:
              containers:
                - name: rsnapshot
                  image: "${IMAGE_REGISTRY}/${NAMESPACE}/${REPO_NAME}-app:latest"
                  imagePullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  env:
                  - name: UNIT
                    value: monthly
                  - name: src 
                    value: ${SRC}
                  - name: target
                    value: ${TARGET}
                  volumeMounts:
                  - name: ssh
                    mountPath: /app/.ssh/
                  - name: config-volume
                    mountPath: /usr/rsnapshot
                  - name: drive
                    mountPath: /home/randomstore/backup
              volumes:
              - name: ssh
                configMap:
                    name: ssh-key
              - name: config-volume
                configMap:
                    name: rsnapshot-conf
              - name: drive
                persistentVolumeClaim:
                    claimName: backup-drive

              restartPolicy: Never
              terminationGracePeriodSeconds: 30
      schedule: "${CRON_SCHEDULE} ${CRON_SCHEDULE} ${CRON_SCHEDULE} * * "
      suspend: "${{SUSPEND_CRON}}"
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: "${APP_NAME}-weekly-${TARGET}"
    spec:
      concurrencyPolicy: Replace
      failedJobsHistoryLimit: 1
      successfulJobsHistoryLimit: 1
      startingDeadlineSeconds: 60
      jobTemplate:
        metadata:
          labels:
            app: "${APP_NAME}-weekly-${TARGET}"
            template: "${REPO_NAME}-template"
        spec:
          activeDeadlineSeconds: 600
          backoffLimit: 0
          completions: 1
          parallelism: 1
          template:
            metadata:
              labels:
                app: "${APP_NAME}-weekly-${TARGET}"
                template: "${REPO_NAME}-template"
            spec:
              containers:
                - name: rsnapshot
                  image: "${IMAGE_REGISTRY}/${NAMESPACE}/${REPO_NAME}-app:latest"
                  imagePullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: ${CPU_REQUEST}
                      memory: ${MEMORY_REQUEST}
                    limits:
                      cpu: ${CPU_LIMIT}
                      memory: ${MEMORY_LIMIT}
                  env:
                  - name: UNIT
                    value: weekly
                  - name: src 
                    value: ${SRC}
                  - name: target
                    value: ${TARGET}
                  volumeMounts:
                  - name: ssh
                    mountPath: /app/.ssh/
                  - name: config-volume
                    mountPath: /usr/rsnapshot
                  - name: drive
                    mountPath: /home/randomstore/backup
              volumes:
              - name: ssh
                configMap:
                    name: ssh-key
              - name: config-volume
                configMap:
                    name: rsnapshot-conf
              - name: drive
                persistentVolumeClaim:
                    claimName: backup-drive

              restartPolicy: Never
              terminationGracePeriodSeconds: 30
      schedule: "${CRON_SCHEDULE} ${CRON_SCHEDULE} * * ${CRON_SCHEDULE}"
      suspend: "${{SUSPEND_CRON}}"
parameters:
  - name: APP_NAME
    description: Application name
    displayName: Application name
    required: true
  - name: INSTANCE
    description: The name of this instance of the application
    displayName: Application Instance Name
    required: true
    value: master
  - name: IMAGE_REGISTRY
    description: The base docker registry
    displayName: Docker Image Registry
    required: true
    value: image-registry.openshift-image-registry.svc:5000
  - name: NAMESPACE
    description: Target namespace reference (i.e. 'wfezkf-dev')
    displayName: Target Namespace
    required: true
  - name: REPO_NAME
    description: Application repository name
    displayName: Repository Name
    required: true
  # https://crontab.guru/every-8-hours
  - name: CRON_SCHEDULE
    description: Identifier for which hour/day/month
    displayName: Crontab ID
    required: false
    value: "0"
  - name: SUSPEND_CRON
    description: Suspend this CronJob
    displayName: Suspend CronJob
    required: false
    value: "false"
  - name: CPU_REQUEST
    description: Starting amount of CPU the container can use.
    displayName: CPU Request
    required: true
    value: 50m
  - name: CPU_LIMIT
    description: Maximum amount of CPU the container can use.
    displayName: CPU Limit
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    description: Starting amount of memory the container can use.
    displayName: Memory Request
    required: true
    value: 384Mi
  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
    value: 384Mi
  - name: SRC
    description: File to backup
    displayName: source
    required: true
  - name: TARGET
    description: Target
    displayName: Target
    required: true
